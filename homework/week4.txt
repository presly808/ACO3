1. Generics, Dynamic Data Structure(based on Nodes)
    (Inner, Nested, Anonymous, Local) classes
     for-each statement
    pattern Iterator, clone
    Serialization

    http://www.cs.usfca.edu/~galles/visualization/Algorithms.html

2. Реализовать структуру данных Двунаправленную Очередь(Dequeue). НА ОСНОВЕ СВЯЗНОГО СПИСКА.
    Переопределяем equals, toString, clone для структуры
   	- добавить элемент в хвост
   	- добавить элемент в голову
   	- забрать элемент с головы
   	- забрать элемент с хвоста
   	- Поиск элемента по значению (сравнение через equals)
    - Поменять местами первый и последний элементы
   	- Поменять местами наибольший и наименьший элементы, в случае если реализован интерфейс Comparable
   	- Отсортировать список, в случае если реализован интерфейс Comparable
   	- Удалить повторяющиеся элементы из списка, в случае если реализован интерфейс Comparable
   	* Перестроить элементы в обратном порядке
   	* Реализовать итератор

3. Reverse queue

    public static Node reverse(Node curr){
    }